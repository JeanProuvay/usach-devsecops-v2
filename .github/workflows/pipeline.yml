name: workflow
on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop, feature/* ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.0'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Instalar dependencias (si no están instaladas)
        run: npm install

      - name: Compilar y empaquetar
        run: npm run build

      - name: Validando existencia del proyecto en sonar
        run: |
          set +e
          curl -f -X POST -u '${{ secrets.SONAR_TOKEN }}:' 'https://sonarcloud.io/api/projects/create' -d 'name=usach-devsecops-v2' -d 'project=usach-devsecops-v2' -d 'organization=jeanprouvay' -d 'visibility=public'
          if [ $? -ne 0 ]; then
            echo "Proyecto ya existe en Sonarcloud"
            echo "::set-output name=proyectoExiste::1"
          else
            echo "Proyecto usach-devsecops-v2 creado exitosamente en Sonarcloud"
          
            echo "Se establece rama main como rama por defecto"
            curl -X POST -u "${{ secrets.SONAR_TOKEN }}:" 'https://sonarcloud.io/api/project_branches/rename' -d 'name=main' -d 'project=usach-devsecops-v2'
          fi
          set -e

      - name: Ejecutar análisis SonarCloud
        run: |
          npx sonarqube-scanner \
            -Dsonar.projectKey=usach-devsecops-v2 \
            -Dsonar.organization=jeanprouvay \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.branch.name=main

      - name: Validando resultado de SonarCloud
        run: |
          projectKey="usach-devsecops-v2"
          branchName="main"
      
          issueCount=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/issues/search?componentKeys=${projectKey}&branch=${branchName}&types=VULNERABILITY&severities=BLOCKER,CRITICAL,MAJOR" \
            | jq '.total')

          echo "Vulnerabilidades críticas/altas/medias encontradas: $issueCount"

          if [ "$issueCount" -gt 0 ]; then
            echo "Se encontraron vulnerabilidades críticas, altas o medias. Deteniendo el pipeline..."
            exit 1
          else
            echo "No se encontraron vulnerabilidades críticas, altas ni medias. Continuando..."
          fi
